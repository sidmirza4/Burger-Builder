{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.8fc58f89.chunk.js","sourcesContent":["import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nclass ContactData extends Component {\n\tstate = {\n\t\torderForm: {\n\t\t\tname: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Your Name',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tstreet: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Street',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tzipCode: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'ZIP Code',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 5,\n\t\t\t\t\tmaxLength: 6,\n\t\t\t\t\tisNumeric: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tcountry: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Country',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Your E-Mail',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t\tdeliveryMethod: {\n\t\t\t\telementType: 'select',\n\t\t\t\telementConfig: {\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ value: 'fastest', displayValue: 'Fastest' },\n\t\t\t\t\t\t{ value: 'cheapest', displayValue: 'Cheapest' },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tvalue: 'fastest',\n\t\t\t\tvalidation: {},\n\t\t\t\tvalid: true,\n\t\t\t},\n\t\t},\n\t\tformIsValid: false,\n\t};\n\n\torderHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tconst formData = {};\n\t\tfor (let formElementIdentifier in this.state.orderForm) {\n\t\t\tformData[formElementIdentifier] = this.state.orderForm[\n\t\t\t\tformElementIdentifier\n\t\t\t].value;\n\t\t}\n\t\tconst order = {\n\t\t\tingredients: this.props.ings,\n\t\t\tprice: this.props.price,\n\t\t\torderData: formData,\n\t\t\tuserId: this.props.userId,\n\t\t};\n\n\t\tthis.props.onOrderBurger(order, this.props.token);\n\t};\n\n\tinputChangedHandler = (event, inputIdentifier) => {\n\t\tconst updatedFormElement = updateObject(\n\t\t\tthis.state.orderForm[inputIdentifier],\n\t\t\t{\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: checkValidity(\n\t\t\t\t\tevent.target.value,\n\t\t\t\t\tthis.state.orderForm[inputIdentifier].validation\n\t\t\t\t),\n\t\t\t\ttouched: true,\n\t\t\t}\n\t\t);\n\n\t\tconst updatedOrderForm = updateObject(this.state.orderForm, {\n\t\t\t[inputIdentifier]: updatedFormElement,\n\t\t});\n\n\t\tlet formIsValid = true;\n\t\tfor (let inputIdentifier in updatedOrderForm) {\n\t\t\tformIsValid =\n\t\t\t\tupdatedOrderForm[inputIdentifier].valid && formIsValid;\n\t\t}\n\t\tthis.setState({\n\t\t\torderForm: updatedOrderForm,\n\t\t\tformIsValid: formIsValid,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.orderForm) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.orderForm[key],\n\t\t\t});\n\t\t}\n\t\tlet form = (\n\t\t\t<form onSubmit={this.orderHandler}>\n\t\t\t\t{formElementsArray.map(formElement => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\t\t\tchanged={event =>\n\t\t\t\t\t\t\tthis.inputChangedHandler(event, formElement.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<Button btnType='Success' disabled={!this.state.formIsValid}>\n\t\t\t\t\tORDER\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t);\n\t\tif (this.props.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={classes.ContactData}>\n\t\t\t\t<h4>Enter your Contact Data</h4>\n\t\t\t\t{form}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tprice: state.burgerBuilder.totalPrice,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOrderBurger: (orderData, token) =>\n\t\t\tdispatch(actions.purchaseBurger(orderData, token)),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\tcheckoutCancelledHandler = () => {\n\t\tthis.props.history.goBack();\n\t};\n\n\tcheckoutContinuedHandler = () => {\n\t\tthis.props.history.replace('/checkout/contact-data');\n\t};\n\n\trender() {\n\t\tlet summary = <Redirect to='/' />;\n\t\tif (this.props.ings) {\n\t\t\tconst purchasedRedirect = this.props.purchased ? (\n\t\t\t\t<Redirect to='/' />\n\t\t\t) : null;\n\t\t\tsummary = (\n\t\t\t\t<div>\n\t\t\t\t\t{purchasedRedirect}\n\t\t\t\t\t<CheckoutSummary\n\t\t\t\t\t\tingredients={this.props.ings}\n\t\t\t\t\t\tcheckoutCancelled={this.checkoutCancelledHandler}\n\t\t\t\t\t\tcheckoutContinued={this.checkoutContinuedHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={this.props.match.path + '/contact-data'}\n\t\t\t\t\t\tcomponent={ContactData}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn summary;\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tpurchased: state.order.purchased,\n\t};\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n\tswitch (props.elementType) {\n\t\tcase 'input':\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tcase 'textarea':\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tcase 'select':\n\t\t\tinputElement = (\n\t\t\t\t<select\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t>\n\t\t\t\t\t{props.elementConfig.options.map((option) => (\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<div className={classes.Input}>\n\t\t\t<label className={classes.Label}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};"],"sourceRoot":""}