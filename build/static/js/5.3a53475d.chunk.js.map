{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","boxSizing","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"wMA2CeA,EAvCD,SAACC,GACd,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAChCA,EAAYE,KAAK,CAChBC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI5B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACzC,OACC,0BACCC,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,UACTC,UAAW,cAEZC,IAAKR,EAAGJ,MAEPI,EAAGJ,KAXL,KAWaI,EAAGH,OAXhB,QAgBF,OACC,yBAAKY,UAAWC,IAAQC,OACvB,2CAAiBb,GACjB,oCACQ,IACP,uCAAac,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,O,gCC5BlDC,E,kLAEEC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARML,KAAKzB,MAAM+B,UACbF,EAASJ,KAAKzB,MAAM6B,OAAOtB,KAAK,SAAAR,GAAK,OACjC,kBAACoB,EAAD,CACIH,IAAKjB,EAAMiC,GACX/B,YAAaF,EAAME,YACnBqB,MAAOvB,EAAMuB,YAIrB,6BACKO,O,GAjBII,aAsCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMpC,MAAM8B,OACpBE,QAASI,EAAMpC,MAAMgC,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAAUC,IAAoBX,EAAOC,QAIhEM,CAAgDK,YAAkBf,EAAQgB,O,mBC9CzFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.3a53475d.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n\tconst ingredients = [];\n\n\tfor (let ingredientName in props.ingredients) {\n\t\tingredients.push({\n\t\t\tname: ingredientName,\n\t\t\tamount: props.ingredients[ingredientName],\n\t\t});\n\t}\n\n\tconst ingredientOutput = ingredients.map((ig) => {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\t\tpadding: '6px 8px',\n\t\t\t\t\tboxSizing: 'border-box'\n\t\t\t\t}}\n\t\t\t\tkey={ig.name}\n\t\t\t>\n\t\t\t\t{ig.name} ({ig.amount})\n\t\t\t</span>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className={classes.Order}>\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>\n\t\t\t\tPrice:{' '}\n\t\t\t\t<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};"],"sourceRoot":""}