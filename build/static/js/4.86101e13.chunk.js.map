{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","target","checkValidity","setState","submitHandler","e","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","loading","errorMessage","error","message","authRedirect","isAuthenticated","to","className","classes","onSubmit","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/4.86101e13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\nimport classes from './Auth.module.css';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols: {\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'E-Mail Address',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tisEmail: true,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\n\t\t\tpassword: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\tplaceholder: 'Password',\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6,\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t},\n\t\t},\n\n\t\tisSignup: true,\n\t};\n\n\tcomponentDidMount() {\n\t\tif (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n\t\t\tthis.props.onSetAuthRedirectPath();\n\t\t}\n\t}\t\n\n\tinputChangedHandler = (event, controlName) => {\n\t\tconst updatedControls = updateObject(this.state.controls, {\n\t\t\t[controlName]: updateObject(this.state.controls[controlName], {\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: checkValidity(\n\t\t\t\t\tevent.target.value,\n\t\t\t\t\tthis.state.controls[controlName].validation\n\t\t\t\t),\n\t\t\t\ttouched: true,\n\t\t\t}),\n\t\t});\n\n\t\tthis.setState({ controls: updatedControls });\n\t};\n\n\tsubmitHandler = e => {\n\t\te.preventDefault();\n\t\tthis.props.onAuth(\n\t\t\tthis.state.controls.email.value,\n\t\t\tthis.state.controls.password.value,\n\t\t\tthis.state.isSignup\n\t\t);\n\t};\n\n\tswitchAuthModeHandler = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn { isSignup: !prevState.isSignup };\n\t\t});\n\t};\n\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor (let key in this.state.controls) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key],\n\t\t\t});\n\t\t}\n\n\t\tlet form = formElementsArray.map(formElement => (\n\t\t\t<Input\n\t\t\t\tkey={formElement.id}\n\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\tvalue={formElement.config.value}\n\t\t\t\tinvalid={!formElement.config.valid}\n\t\t\t\tshouldValidate={formElement.config.validation}\n\t\t\t\ttouched={formElement.config.touched}\n\t\t\t\tchanged={event =>\n\t\t\t\t\tthis.inputChangedHandler(event, formElement.id)\n\t\t\t\t}\n\t\t\t/>\n\t\t));\n\n\t\tif (this.props.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\n\t\tlet errorMessage = null;\n\n\t\tif (this.props.error) {\n\t\t\terrorMessage = <p>{this.props.error.message}</p>;\n\t\t}\n\n\t\tlet authRedirect = null;\n\n\t\tif (this.props.isAuthenticated) {\n\t\t\tauthRedirect = <Redirect to={this.props.authRedirectPath} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t\t{authRedirect}\n\t\t\t\t{errorMessage}\n\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t{form}\n\t\t\t\t\t<Button btnType='Success'>Submit</Button>\n\t\t\t\t</form>\n\t\t\t\t<Button clicked={this.switchAuthModeHandler} btnType='Danger'>\n\t\t\t\t\tSwitch to {this.state.isSignup ? 'signin' : 'signup'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tloading: state.auth.loading,\n\t\terror: state.auth.error,\n\t\tisAuthenticated: state.auth.token !== null,\n\t\tbuildingBurger: state.burgerBuilder.building,\n\t\tauthRedirectPath: state.auth.authRedirectPath,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (email, password, isSignup) =>\n\t\t\tdispatch(actions.auth(email, password, isSignup)),\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/')),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n\tswitch (props.elementType) {\n\t\tcase 'input':\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tcase 'textarea':\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tcase 'select':\n\t\t\tinputElement = (\n\t\t\t\t<select\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t>\n\t\t\t\t\t{props.elementConfig.options.map((option) => (\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClasses.join(' ')}\n\t\t\t\t\t{...props.elementConfig}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.changed}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<div className={classes.Input}>\n\t\t\t<label className={classes.Label}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};"],"sourceRoot":""}